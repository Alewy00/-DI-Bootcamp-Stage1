{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  user: {},\n  loading: false,\n  error: null\n};\nconst userSlice = createSlice({\n  name: \"userData\",\n  initialState,\n  reducers: {\n    fetchUserStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchUserSuccess: (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    },\n    fetchUserFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const fetchUserData = () => async dispatch => {\n  try {\n    dispatch(fetchUserStart());\n    const response = await axios.get(\"https://jsonplaceholder.typicode.com/users/1\"); // Replace with your API endpoint\n\n    dispatch(fetchUserSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchUserFailure(error.message));\n  }\n};\nexport const {\n  fetchUserStart,\n  fetchUserSuccess,\n  fetchUserFailure\n} = userDataSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","axios","initialState","user","loading","error","userSlice","name","reducers","fetchUserStart","state","fetchUserSuccess","action","payload","fetchUserFailure","fetchUserData","dispatch","response","get","data","message","userDataSlice","actions","reducer"],"sources":["C:/Users/alewy/OneDrive/Desktop/Bootcamp/DI_Bootcamp/Week11/Day2/XP/thunk/src/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"userData\",\r\n  initialState,\r\n  reducers: {\r\n    fetchUserStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    fetchUserSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.user = action.payload;\r\n    },\r\n    fetchUserFailure: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const fetchUserData = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchUserStart());\r\n\r\n    const response = await axios.get(\r\n      \"https://jsonplaceholder.typicode.com/users/1\"\r\n    ); // Replace with your API endpoint\r\n\r\n    dispatch(fetchUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(fetchUserFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const { fetchUserStart, fetchUserSuccess, fetchUserFailure } =\r\n  userDataSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,CAAC,CAAC;EACRC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,UAAU;EAChBL,YAAY;EACZM,QAAQ,EAAE;IACRC,cAAc,EAAGC,KAAK,IAAK;MACzBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,gBAAgB,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnCF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,gBAAgB,EAAEA,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnCF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,aAAa,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACrD,IAAI;IACFA,QAAQ,CAACP,cAAc,CAAC,CAAC,CAAC;IAE1B,MAAMQ,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAC9B,8CACF,CAAC,CAAC,CAAC;;IAEHF,QAAQ,CAACL,gBAAgB,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdW,QAAQ,CAACF,gBAAgB,CAACT,KAAK,CAACe,OAAO,CAAC,CAAC;EAC3C;AACF,CAAC;AAED,OAAO,MAAM;EAAEX,cAAc;EAAEE,gBAAgB;EAAEG;AAAiB,CAAC,GACjEO,aAAa,CAACC,OAAO;AACvB,eAAehB,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}